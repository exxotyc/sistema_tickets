Sprint 1 — RBAC + CRUD estable

 Roles y permisos DRF

Criterios: solicitante ve/edita solo sus tickets; técnico ve/edita asignados; admin total.

Hecho cuando: tests 403/200 por rol pasan; permisos centralizados en permissions.py.

 Transición de estados + log

Criterios: flujo open→in_progress→resolved→closed, reabrir a open; cada cambio crea TicketLog.

Hecho cuando: serializer valida y crea log con {"from":x,"to":y}.

 Comentarios y adjuntos

Criterios: agregar/leer comentarios; subir archivo con hash y mime; límite de tamaño.

Hecho cuando: tests de subida y lectura pasan; archivo visible por MEDIA_URL.

 Admin Django configurado

Criterios: modelos visibles y filtrables por estado, prioridad, técnico.

Hecho cuando: filtros e inline de comentarios activos.

Sprint 2 — Asignación y SLA + notificaciones

 Asignación manual y reasignación

Criterios: campo assigned_to modificable por técnico/admin; log de reasignación.

Hecho cuando: PUT/PATCH guarda y registra motivo en meta_json.

 SLA por prioridad

Criterios: sla_minutes por ticket o por prioridad por defecto.

Hecho cuando: cron/command marca breach_risk=true si now > due_at - Δ.

 Alertas y notificaciones

Criterios: email o webhook en creación, cambio de estado, riesgo SLA.

Hecho cuando: plantillas enviadas y deduplicación por ticket en ventana T.

Sprint 3 — Dashboard y reportes

 Dashboard KPIs

Criterios: cards de abiertos/en progreso/resueltos/cerrados, críticos, MTTR y FRT; filtros por fecha, categoría, técnico.

Hecho cuando: endpoint /metrics/summary devuelve métricas correctas con filtros.

 Reportes PDF/Excel

Criterios: export por rango, categoría, técnico, prioridad; pie con parámetros usados.

Hecho cuando: descarga genera archivo ≤10s y coincide con datos del dashboard.

Sprint 4 — Historial por activo, FAQ, seguridad

 Historial por activo/máquina

Criterios: vista por asset_id con N incidentes en M meses y export.

Hecho cuando: endpoint lista y exporta CSV/PDF; regla N/M marcada.

 FAQ/autoservicio

Criterios: base de FAQs vinculada a categorías; botón “crear ticket” si no resuelve.

Hecho cuando: búsqueda por texto y categoría retorna FAQ; eventos de “no resuelto” medidos.

 Hardening y auditoría

Criterios: logs de acceso, rate limiting, pruebas OWASP básicas, roles trazados.

Hecho cuando: checklist seguridad pasa; TicketLog cubre eventos críticos.

Endpoints mínimos a implementar

GET/POST /api/tickets/

GET/PATCH /api/tickets/{id}/ (cambio de estado y asignación)

POST /api/tickets/{id}/comments/

POST /api/tickets/{id}/attachments/

GET /api/metrics/summary?from&to&category&assignee&priority

GET /api/reports/export?format=pdf|xlsx&filtros...

GET /api/assets/{asset_id}/tickets?from&to&n&m

Tests de aceptación por sprint

S1: permisos por rol, transición válida/invalidada, comentario y adjunto OK.

S2: reasignación con log, simulación SLA y alerta disparada.

S3: métricas correctas vs fixtures, exporta y abre.

S4: activos con N/M correcto, FAQ busca y mide “no resuelto”.
